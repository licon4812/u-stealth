# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net


name: CLI Build and Packaging

on:
  workflow_dispatch:
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Restore dependencies
        run: dotnet restore UStealth.CICD.slnx
      - name: Build
        run: dotnet build UStealth.CICD.slnx --no-restore
      - name: Upload build outputs
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            **/bin/**
            **/obj/**

  test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Download build outputs
        uses: actions/download-artifact@v4
        with:
          name: build-output
      - name: Test
        shell: bash
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            dotnet test .\\UStealth.Tests\\UStealth.Tests.csproj --verbosity normal --framework net9.0-windows
          else
            dotnet test .//UStealth.Tests//UStealth.Tests.csproj --verbosity normal --framework net9.0
          fi

  artifacts:
    needs: test
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Download build outputs
        uses: actions/download-artifact@v4
        with:
          name: build-output
      - name: Build Artifacts
        run: dotnet run --project .\\UStealth.ModularPipelines\\UStealth.ModularPipelines.csproj
      - name: Prepare ZIPs for upload
        run: |
          mkdir -p temp-zips
          for %f in (UStealth.DriveHelper\bin\Release\**\*.zip) do copy "%f" temp-zips\
        shell: cmd
      - name: Upload DriveHelper ZIPs
        uses: actions/upload-artifact@v4
        with:
          name: cli-zips
          path: temp-zips\\*.zip
